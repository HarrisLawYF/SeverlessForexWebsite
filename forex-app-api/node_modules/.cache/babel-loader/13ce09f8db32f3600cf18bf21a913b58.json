{"ast":null,"code":"import \"source-map-support/register\";\nimport { success, failure } from \"../libs/response-lib\";\nimport { calculateMaximumProfit } from \"../libs/bellman-ford-lib\"; //import { currency_data } from \"../resources/currency.json\";\n\nconst {\n  currency_data\n} = require(\"../resources/currency.json\"); //import { getCurrencyRates } from \"../libs/currency-data\";\n\n\nexport async function main(event, content, callback) {\n  //const data = JSON.parse(event.body);\n  try {\n    //TODO: call currency API (set USD as the main currency)\n    //TODO: attach original value of the currency exchange\n    //var data = await getCurrencyRates(\"USD\", \"AUD\");\n    //console.log(data);\n    //data = await getCurrencyRates(\"SGD\", \"MYR\");\n    //console.log(data);\n    //console.log(\"-----------------------------\");\n    console.log(currency_data);\n    console.log(\"--------------\");\n    var body = {};\n    body.total_currencies = 3;\n    body.total_rates = 6;\n    body.currencies = currency_data;\n    console.log(body);\n    var result = await calculateMaximumProfit(body);\n    return success(result);\n  } catch (e) {\n    console.log(e);\n    return failure({\n      status: false\n    });\n  }\n}","map":{"version":3,"sources":["D:\\Users\\Harris\\Desktop\\Projects\\forex-website\\forex-app-api\\events\\get.js"],"names":["success","failure","calculateMaximumProfit","currency_data","require","main","event","content","callback","console","log","body","total_currencies","total_rates","currencies","result","e","status"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,sBAAjC;AACA,SAASC,sBAAT,QAAuC,0BAAvC,C,CACA;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBC,OAAO,CAAC,4BAAD,CAAjC,C,CACA;;;AACA,OAAO,eAAeC,IAAf,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA6C;AAChD;AAGA,MAAG;AACC;AACA;AAEA;AACA;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACC,gBAAL,GAAwB,CAAxB;AACAD,IAAAA,IAAI,CAACE,WAAL,GAAmB,CAAnB;AACAF,IAAAA,IAAI,CAACG,UAAL,GAAkBX,aAAlB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,QAAII,MAAM,GAAG,MAAMb,sBAAsB,CAACS,IAAD,CAAzC;AACA,WAAOX,OAAO,CAACe,MAAD,CAAd;AACH,GAlBD,CAkBE,OAAOC,CAAP,EAAS;AACPP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ;AACA,WAAOf,OAAO,CAAC;AAACgB,MAAAA,MAAM,EAAC;AAAR,KAAD,CAAd;AACH;AACJ","sourcesContent":["import { success, failure } from \"../libs/response-lib\";\r\nimport { calculateMaximumProfit } from \"../libs/bellman-ford-lib\";\r\n//import { currency_data } from \"../resources/currency.json\";\r\nconst { currency_data } = require(\"../resources/currency.json\");\r\n//import { getCurrencyRates } from \"../libs/currency-data\";\r\nexport async function main(event, content, callback){\r\n    //const data = JSON.parse(event.body);\r\n\r\n\r\n    try{\r\n        //TODO: call currency API (set USD as the main currency)\r\n        //TODO: attach original value of the currency exchange\r\n\r\n        //var data = await getCurrencyRates(\"USD\", \"AUD\");\r\n        //console.log(data);\r\n        //data = await getCurrencyRates(\"SGD\", \"MYR\");\r\n        //console.log(data);\r\n        //console.log(\"-----------------------------\");\r\n        console.log(currency_data);\r\n        console.log(\"--------------\");\r\n        var body = {};\r\n        body.total_currencies = 3;\r\n        body.total_rates = 6;\r\n        body.currencies = currency_data;\r\n        console.log(body);\r\n        var result = await calculateMaximumProfit(body);\r\n        return success(result);\r\n    } catch (e){\r\n        console.log(e);\r\n        return failure({status:false});\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}